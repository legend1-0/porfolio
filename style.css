:where([class^="ri-"])::before { content: "\f3c2"; }
        
:root {
    --dark-bg: #1A1A1A;
    --dark-accent1: #00FF8C;
    --dark-accent2: #FF00FF;
    --light-bg: #FFFFFF;
    --light-accent1: #FF3366;
    --light-accent2: #3399FF;
}

html{
  scroll-behavior: smooth;
}
body {
    font-family: 'Poppins', sans-serif;
    transition: background-color 0.5s ease, color 0.5s ease;
    cursor: none;
    overflow-x: hidden;
}

.dark {
    background-color: var(--dark-bg);
    color: #FFFFFF;
}

.light {
    background-color: var(--light-bg);
    color: #1A1A1A;
}

.custom-cursor {
    position: fixed;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    pointer-events: none;
    z-index: 9999;
    mix-blend-mode: difference;
    transition: transform 0.2s ease;
}

.cursor-dot {
    background-color: white;
    transform: translate(-50%, -50%);
}

.cursor-outline {
    width: 40px;
    height: 40px;
    border: 2px solid rgba(255, 255, 255, 0.5);
    transform: translate(-50%, -50%);
}

.cursor-trail {
    position: fixed;
    width: 6px;
    height: 6px;
    border-radius: 50%;
    background-color: rgba(255, 255, 255, 0.3);
    pointer-events: none;
    z-index: 9998;
}

.glassmorphism {
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
}

.dark .glassmorphism {
    background-color: rgba(26, 26, 26, 0.7);
    border-bottom: 1px solid rgba(255, 255, 255, 0.1);
}

.light .glassmorphism {
    background-color: rgba(255, 255, 255, 0.7);
    border-bottom: 1px solid rgba(0, 0, 0, 0.1);
}

.magnetic-button {
    transition: transform 0.3s cubic-bezier(0.175, 0.885, 0.32, 1.275);
}

.dark .nav-link:hover {
    text-shadow: 0 0 10px var(--dark-accent1), 0 0 20px var(--dark-accent1);
}

.light .nav-link:hover {
    text-shadow: 0 0 10px var(--light-accent1), 0 0 20px var(--light-accent1);
}

.ripple {
    position: absolute;
    border-radius: 50%;
    transform: scale(0);
    animation: ripple 0.6s linear;
    background-color: rgba(255, 255, 255, 0.3);
}

@keyframes ripple {
    to {
        transform: scale(4);
        opacity: 0;
    }
}

.particles-container {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    overflow: hidden;
    z-index: -1;
}

.particle {
    position: absolute;
    border-radius: 50%;
    pointer-events: none;
}

.dark .particle {
    background-color: rgba(255, 255, 255, 0.1);
}

.light .particle {
    background-color: rgba(0, 0, 0, 0.05);
}

.glitch-effect:hover {
    animation: glitch 0.3s linear infinite;
}

@keyframes glitch {
    0% {
        transform: translate(0);
    }
    20% {
        transform: translate(-2px, 2px);
    }
    40% {
        transform: translate(-2px, -2px);
    }
    60% {
        transform: translate(2px, 2px);
    }
    80% {
        transform: translate(2px, -2px);
    }
    100% {
        transform: translate(0);
    }
}

.gradient-border {
    position: relative;
}

.gradient-border::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    z-index: -1;
    border-radius: inherit;
    animation: gradient-animation 3s linear infinite;
}

.dark .gradient-border::before {
    background: linear-gradient(45deg, var(--dark-accent1), var(--dark-accent2), var(--dark-accent1));
    background-size: 200% 200%;
}

.light .gradient-border::before {
    background: linear-gradient(45deg, var(--light-accent1), var(--light-accent2), var(--light-accent1));
    background-size: 200% 200%;
}

@keyframes gradient-animation {
    0% {
        background-position: 0% 50%;
    }
    50% {
        background-position: 100% 50%;
    }
    100% {
        background-position: 0% 50%;
    }
}

.project-card {
    transform-style: preserve-3d;
    transform: perspective(1000px);
    transition: transform 0.3s ease, box-shadow 0.3s ease, transform 0.3s ease;
}

.project-card:hover {
    transform: translateY(-10px);
    box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

.project-image-container {
    overflow: hidden;
}

.project-image {
    transition: transform 0.5s ease;
}

.project-card:hover .project-image {
    transform: scale(1.05);
}

.reveal-animation {
    opacity: 0;
    transform: translateY(30px);
    transition: opacity 0.8s ease, transform 0.8s ease;
}

.reveal-animation.active {
    opacity: 1;
    transform: translateY(0);
}

.staggered-animation {
    opacity: 0;
    transform: translateY(20px);
}

.wave-footer {
    position: relative;
    overflow: hidden;
}

.wave-footer::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 50px;
    background: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1440 320'%3E%3Cpath fill='%23ffffff' fill-opacity='1' d='M0,192L48,197.3C96,203,192,213,288,229.3C384,245,480,267,576,250.7C672,235,768,181,864,181.3C960,181,1056,235,1152,234.7C1248,235,1344,181,1392,154.7L1440,128L1440,320L1392,320C1344,320,1248,320,1152,320C1056,320,960,320,864,320C768,320,672,320,576,320C480,320,384,320,288,320C192,320,96,320,48,320L0,320Z'%3E%3C/path%3E%3C/svg%3E");
    background-size: cover;
    transform: rotate(180deg);
}

.dark .wave-footer::before {
    filter: invert(1);
}

.social-icon {
    transition: transform 0.3s ease;
    animation: float 3s ease-in-out infinite;
}

.social-icon:hover {
    transform: translateY(-5px);
}

@keyframes float {
    0% {
        transform: translateY(0);
    }
    50% {
        transform: translateY(-5px);
    }
    100% {
        transform: translateY(0);
    }
}

.custom-input {
    border: none;
    border-bottom: 2px solid #ccc;
    background: transparent;
    transition: border-color 0.3s ease;
    outline: none;
}

.dark .custom-input {
    color: white;
    border-bottom-color: rgba(255, 255, 255, 0.3);
}

.dark .custom-input:focus {
    border-bottom-color: var(--dark-accent1);
}

.light .custom-input {
    color: #1A1A1A;
    border-bottom-color: rgba(0, 0, 0, 0.3);
}

.light .custom-input:focus {
    border-bottom-color: var(--light-accent1);
}

.custom-scrollbar {
    position: fixed;
    top: 0;
    right: 0;
    width: 10px;
    height: 0;
    background-color: var(--light-accent1);
    z-index: 9999;
}

.dark .custom-scrollbar {
    background-color: var(--dark-accent1);
}

input[type="range"] {
    -webkit-appearance: none;
    width: 100%;
    height: 5px;
    border-radius: 5px;
    background: #d3d3d3;
    outline: none;
}

input[type="range"]::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    width: 20px;
    height: 20px;
    border-radius: 50%;
    cursor: pointer;
}

.dark input[type="range"]::-webkit-slider-thumb {
    background: var(--dark-accent1);
}

.light input[type="range"]::-webkit-slider-thumb {
    background: var(--light-accent1);
}

.custom-checkbox {
    position: relative;
    display: inline-block;
    width: 20px;
    height: 20px;
    margin-right: 10px;
    cursor: pointer;
}

.custom-checkbox input {
    opacity: 0;
    width: 0;
    height: 0;
}

.checkmark {
    position: absolute;
    top: 0;
    left: 0;
    width: 20px;
    height: 20px;
    border-radius: 4px;
    transition: all 0.3s ease;
}

.dark .checkmark {
    border: 2px solid rgba(255, 255, 255, 0.5);
}

.light .checkmark {
    border: 2px solid rgba(0, 0, 0, 0.5);
}

.custom-checkbox input:checked ~ .checkmark {
    background-color: var(--light-accent1);
    border-color: var(--light-accent1);
}

.dark .custom-checkbox input:checked ~ .checkmark {
    background-color: var(--dark-accent1);
    border-color: var(--dark-accent1);
}

.checkmark:after {
    content: "";
    position: absolute;
    display: none;
    left: 6px;
    top: 2px;
    width: 5px;
    height: 10px;
    border: solid white;
    border-width: 0 2px 2px 0;
    transform: rotate(45deg);
}

.custom-checkbox input:checked ~ .checkmark:after {
    display: block;
}

.switch {
    position: relative;
    display: inline-block;
    width: 60px;
    height: 30px;
}

.switch input {
    opacity: 0;
    width: 0;
    height: 0;
}

.slider {
    position: absolute;
    cursor: pointer;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background-color: #ccc;
    transition: .4s;
    border-radius: 30px;
}

.slider:before {
    position: absolute;
    content: "";
    height: 22px;
    width: 22px;
    left: 4px;
    bottom: 4px;
    background-color: white;
    transition: .4s;
    border-radius: 50%;
}

.dark .slider {
    background-color: rgba(255, 255, 255, 0.2);
}

.light .slider {
    background-color: rgba(0, 0, 0, 0.2);
}

input:checked + .slider {
    background-color: var(--light-accent1);
}

.dark input:checked + .slider {
    background-color: var(--dark-accent1);
}

input:checked + .slider:before {
    transform: translateX(30px);
}

.filter-tag {
    transition: all 0.3s ease;
    cursor: pointer;
}

.filter-tag.active {
    background-color: var(--light-accent1);
    color: white;
}

.dark .filter-tag.active {
    background-color: var(--dark-accent1);
}

.char {
    display: inline-block;
    opacity: 0;
    transform: translateY(20px);
}

@keyframes fadeInUp {
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
    -webkit-appearance: none;
    margin: 0;
}